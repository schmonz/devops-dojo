#!/usr/bin/env perl

use warnings;
use strict;

package printlabels;

sub read_file_into_one_big_string {
	my ($filename) = @_;
	local $/ = undef;
	open FILE, $filename or die "Couldn't open file: $!";
	binmode FILE;
	my $contents = <FILE>;
	close FILE;
	return $contents;
}

sub one_address_per_line {
	my ($as_one_big_string) = @_;
	return sort split("\n", $as_one_big_string);
}

sub one_address_per_line_from_file {
	my ($filename) = @_;
	my $contents = read_file_into_one_big_string($filename);
	return one_address_per_line($contents);
}

sub extract_address_parts {
	my ($input_address) = @_;
	chomp($input_address);
	my @address_parts = split(/,(?=\S)/, $input_address);
	return @address_parts;
}

sub capitalize_each_word {
	my (@words) = @_;
	return map { ucfirst } @words;
}

sub wrap_possibly_long_line { 
	my ($line) = @_;
	use Text::Wrap;
	$Text::Wrap::columns = 72;
	return wrap('', '  ', $line);
}

sub format_address {
	my ($last, $first, $title, $street) = @_;
	my $firstline = wrap_possibly_long_line("$title $first $last");
	return <<EOT;
$firstline
$street
EOT
}

sub do_all {
	my (@input_addresses) = @_;
	return join(
		"\n",
		map { printlabels::format_address(
			printlabels::extract_address_parts($_)
		) } @input_addresses,
	);
}

sub main {
	my ($filename) = @_;
	defined $filename
		&& print do_all(one_address_per_line_from_file($filename));
}

main(@ARGV) unless caller();

1
